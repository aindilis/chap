("abbreviation" "bishop" "B")
("abbreviation" "king" "K")
("abbreviation" "knight" "N")
("abbreviation" "pawn" "P")
("abbreviation" "queen" "Q")
("abbreviation" "rook" "R")
("center_square" ("square" "d" "4"))
("center_square" ("square" "d" "5"))
("center_square" ("square" "e" "4"))
("center_square" ("square" "e" "5"))
("corner_square" ("square" "a" "1"))
("corner_square" ("square" "a" "8"))
("corner_square" ("square" "h" "1"))
("corner_square" ("square" "h" "8"))
("diagonal" "negative" "0")
("diagonal" "negative" "-1")
("diagonal" "negative" "1")
("diagonal" "negative" "-2")
("diagonal" "negative" "2")
("diagonal" "negative" "-3")
("diagonal" "negative" "3")
("diagonal" "negative" "-4")
("diagonal" "negative" "4")
("diagonal" "negative" "-5")
("diagonal" "negative" "5")
("diagonal" "negative" "-6")
("diagonal" "negative" "6")
("diagonal" "negative" "-7")
("diagonal" "negative" "7")
("diagonal" "positive" "10")
("diagonal" "positive" "11")
("diagonal" "positive" "12")
("diagonal" "positive" "13")
("diagonal" "positive" "14")
("diagonal" "positive" "15")
("diagonal" "positive" "16")
("diagonal" "positive" "2")
("diagonal" "positive" "3")
("diagonal" "positive" "4")
("diagonal" "positive" "5")
("diagonal" "positive" "6")
("diagonal" "positive" "7")
("diagonal" "positive" "8")
("diagonal" "positive" "9")
("file" "a")
("file" "b")
("file" "c")
("file" "d")
("file" "e")
("file" "f")
("file" "g")
("file" "h")
("file_to_int" "a" "1")
("file_to_int" "b" "2")
("file_to_int" "c" "3")
("file_to_int" "d" "4")
("file_to_int" "e" "5")
("file_to_int" "f" "6")
("file_to_int" "g" "7")
("file_to_int" "h" "8")
("implies" ("and" ("abs_distance" var-X1 var-X2 "1") ("distance" var-Color var-Y1 var-Y2 "1")) ("theoretical_range" ("piece" var-Color "pawn") "capture" ("square" var-X1 var-Y1) ("square" var-X2 var-Y2)))
("implies" ("and" ("abs_distance" var-X1 var-X2 var-Z1) ("abs_distance" var-Y1 var-Y2 var-Z2) ("is" var-Z ("max" var-Z1 var-Z2))) ("square_distance" ("square" var-X1 var-Y1) ("square" var-X2 var-Y2) var-Z))
("implies" ("and" ("colinear" ("square" var-X1 var-Y1) ("square" var-X2 var-Y2) var-Element) ("colinear" ("square" var-X1 var-Y1) ("square" var-X3 var-Y3) var-Element) ("square_distance" ("square" var-X1 var-Y1) ("square" var-X2 var-Y2) var-Z12) ("square_distance" ("square" var-X1 var-Y1) ("square" var-X3 var-Y3) var-Z13) ("square_distance" ("square" var-X2 var-Y2) ("square" var-X3 var-Y3) var-Z23) ("greater_than" var-Z12 ("max" var-Z13 var-Z23))) ("lies_between" ("square" var-X1 var-Y1) ("square" var-X3 var-Y3) ("square" var-X2 var-Y2)))
("implies" ("and" ("distance" var-Color var-Y1 var-Y2 "1")) ("theoretical_range" ("piece" var-Color "pawn") "move" ("square" var-X var-Y1) ("square" var-X var-Y2)))
("implies" ("and" ("distance" var-X var-Y var-A) ("is" var-Z ("abs" var-A))) ("abs_distance" var-X var-Y var-Z))
("implies" ("and" ("equals" var-Color "black") ("rank" var-X) ("rank" var-Y) ("distance" "white" var-X var-Y var-A) ("is" var-Z ("negative" var-A))) ("distance" var-Color var-X var-Y var-Z))
("implies" ("and" ("equals" var-Color "white") ("rank" var-X) ("rank" var-Y) ("is" var-Z ("minus" var-Y var-X))) ("distance" var-Color var-X var-Y var-Z))
("implies" ("and" ("equals" var-X1 var-X2) ("equals" var-Y1 var-Y2)) ("same_square" ("square" var-X1 var-Y1) ("square" var-X2 var-Y2)))
("implies" ("and" ("equals" var-X var-File)) ("on_file" ("square" var-X var-Y) var-File))
("implies" ("and" ("equals" var-Y var-Rank)) ("on_rank" ("square" var-X var-Y) var-Rank))
("implies" ("and" ("file_to_int" var-X var-A) ("is" var-Z ("minus" var-A var-Y)) ("equals" var-Diagonal ("diagonal" "negative" var-Z))) ("on_diagonal" ("square" var-X var-Y) var-Diagonal))
("implies" ("and" ("file_to_int" var-X var-A) ("is" var-Z ("plus" var-A var-Y)) ("equals" var-Diagonal ("diagonal" "positive" var-Z))) ("on_diagonal" ("square" var-X var-Y) var-Diagonal))
("implies" ("and" ("file" var-X2) ("rank" var-Y2) ("equals" ("diagonal" var-Sign var-Int) var-Diagonal) ("on_diagonal" ("square" var-X1 var-Y1) var-Diagonal) ("on_diagonal" ("square" var-X2 var-Y2) var-Diagonal)) ("colinear" ("square" var-X1 var-Y1) ("square" var-X2 var-Y2) var-Diagonal))
("implies" ("and" ("file" var-X2) ("rank" var-Y2) ("file" var-File) ("on_file" ("square" var-X1 var-Y1) var-File) ("on_file" ("square" var-X2 var-Y2) var-File)) ("colinear" ("square" var-X1 var-Y1) ("square" var-X2 var-Y2) var-File))
("implies" ("and" ("file" var-X2) ("rank" var-Y2) ("rank" var-Rank) ("on_rank" ("square" var-X1 var-Y1) var-Rank) ("on_rank" ("square" var-X2 var-Y2) var-Rank)) ("colinear" ("square" var-X1 var-Y1) ("square" var-X2 var-Y2) var-Rank))
("implies" ("and" ("file" var-X) ("file" var-Y) ("file_to_int" var-X var-A) ("file_to_int" var-Y var-B) ("is" var-Z ("minus" var-B var-A))) ("distance" var-X var-Y var-Z))
("implies" ("and" ("file" var-X) ("rank" var-Y)) ("square" var-X var-Y))
("implies" ("and" ("in" ("on" ("piece" var-Color1 var-Type1) ("square" var-X1 var-Y1)) var-Pos) ("in" ("on" ("piece" var-Color2 var-Type2) ("square" var-X2 var-Y2)) var-Pos) ("theoretical_range" ("piece" var-Color1 var-Type1) "capture" ("square" var-X1 var-Y1) ("square" var-X2 var-Y2)) ("not" ("line_blocked" ("piece" var-Color1 var-Type1) ("square" var-X1 var-Y1) ("square" var-X2 var-Y2) var-Pos)) ("not" ("equals" var-Color1 var-Color2))) ("attacking" ("on" ("piece" var-Color1 var-Type1) ("square" var-X1 var-Y1)) ("on" ("piece" var-Color2 var-Type2) ("square" var-X2 var-Y2)) var-Pos))
("implies" ("and" ("not" ("equals" var-Type "knight")) ("lies_between" ("square" var-X1 var-Y1) ("square" var-X3 var-Y3) ("square" var-X2 var-Y2)) ("in" ("on" var-Piece ("square" var-X3 var-Y3)) var-Pos)) ("line_blocked" ("piece" var-Color var-Type) ("square" var-X1 var-Y1) ("square" var-X2 var-Y2) var-Pos))
("implies" ("and" ("not" ("equals" var-X1 var-X2))) ("theoretical_range" ("piece" var-Color "rook") var-Purpose ("square" var-X1 var-Y) ("square" var-X2 var-Y)))
("implies" ("and" ("not" ("equals" var-Y1 var-Y2))) ("theoretical_range" ("piece" var-Color "rook") var-Purpose ("square" var-X var-Y1) ("square" var-X var-Y2)))
("implies" ("and" ("not" ("same_square" ("square" var-X1 var-Y1) ("square" var-X2 var-Y2))) ("abs_distance" var-Y1 var-Y2 var-Z1) ("abs_distance" var-X1 var-X2 var-Z2) ("equals" var-Z1 var-Z2)) ("theoretical_range" ("piece" var-Color "bishop") var-Purpose ("square" var-X1 var-Y1) ("square" var-X2 var-Y2)))
("implies" ("and" ("rank" var-X) ("rank" var-Y) ("is" var-Z ("minus" var-Y var-X))) ("distance" var-X var-Y var-Z))
("implies" ("and" ("theoretical_range" ("piece" var-Color "bishop") var-Purpose ("square" var-X1 var-Y1) ("square" var-X2 var-Y2))) ("theoretical_range" ("piece" var-Color "queen") var-Purpose ("square" var-X1 var-Y1) ("square" var-X2 var-Y2)))
("implies" ("and" ("theoretical_range" ("piece" var-Color "rook") var-Purpose ("square" var-X1 var-Y1) ("square" var-X2 var-Y2))) ("theoretical_range" ("piece" var-Color "queen") var-Purpose ("square" var-X1 var-Y1) ("square" var-X2 var-Y2)))
("implies" ("and" "true") ("different_square" ("square" var-X1 var-Y1) ("square" var-X2 var-Y2)))
("implies" ("and" "true") ("theoretical_range" ("piece" "black" "pawn") "move" ("square" var-X "7") ("square" var-X "5")))
("implies" ("and" "true") ("theoretical_range" ("piece" "white" "pawn") "move" ("square" var-X "2") ("square" var-X "4")))
("in" ("on" ("piece" "black" "bishop") ("square" "c" "8")) "pos1")
("in" ("on" ("piece" "black" "bishop") ("square" "f" "8")) "pos1")
("in" ("on" ("piece" "black" "king") ("square" "e" "8")) "pos1")
("in" ("on" ("piece" "black" "knight") ("square" "b" "8")) "pos1")
("in" ("on" ("piece" "black" "knight") ("square" "g" "8")) "pos1")
("in" ("on" ("piece" "black" "pawn") ("square" "a" "7")) "pos1")
("in" ("on" ("piece" "black" "pawn") ("square" "b" "7")) "pos1")
("in" ("on" ("piece" "black" "pawn") ("square" "c" "7")) "pos1")
("in" ("on" ("piece" "black" "pawn") ("square" "d" "7")) "pos1")
("in" ("on" ("piece" "black" "pawn") ("square" "e" "7")) "pos1")
("in" ("on" ("piece" "black" "pawn") ("square" "f" "7")) "pos1")
("in" ("on" ("piece" "black" "pawn") ("square" "g" "6")) "pos1")
("in" ("on" ("piece" "black" "pawn") ("square" "h" "7")) "pos1")
("in" ("on" ("piece" "black" "queen") ("square" "d" "8")) "pos1")
("in" ("on" ("piece" "black" "queen") ("square" "e" "4")) "pos1")
("in" ("on" ("piece" "black" "rook") ("square" "a" "8")) "pos1")
("in" ("on" ("piece" "black" "rook") ("square" "h" "8")) "pos1")
("in" ("on" ("piece" "white" "bishop") ("square" "c" "1")) "pos1")
("in" ("on" ("piece" "white" "bishop") ("square" "f" "1")) "pos1")
("in" ("on" ("piece" "white" "king") ("square" "e" "1")) "pos1")
("in" ("on" ("piece" "white" "knight") ("square" "b" "1")) "pos1")
("in" ("on" ("piece" "white" "knight") ("square" "e" "6")) "pos1")
("in" ("on" ("piece" "white" "knight") ("square" "g" "1")) "pos1")
("in" ("on" ("piece" "white" "pawn") ("square" "a" "2")) "pos1")
("in" ("on" ("piece" "white" "pawn") ("square" "b" "2")) "pos1")
("in" ("on" ("piece" "white" "pawn") ("square" "c" "2")) "pos1")
("in" ("on" ("piece" "white" "pawn") ("square" "d" "2")) "pos1")
("in" ("on" ("piece" "white" "pawn") ("square" "f" "2")) "pos1")
("in" ("on" ("piece" "white" "pawn") ("square" "f" "5")) "pos1")
("in" ("on" ("piece" "white" "pawn") ("square" "g" "2")) "pos1")
("in" ("on" ("piece" "white" "pawn") ("square" "h" "2")) "pos1")
("in" ("on" ("piece" "white" "queen") ("square" "d" "1")) "pos1")
("in" ("on" ("piece" "white" "rook") ("square" "a" "1")) "pos1")
("in" ("on" ("piece" "white" "rook") ("square" "h" "1")) "pos1")
("rank" "1")
("rank" "2")
("rank" "3")
("rank" "4")
("rank" "5")
("rank" "6")
("rank" "7")
("rank" "8")
